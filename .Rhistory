iTest$predclass3 <- factor(ifelse(iTest$prediction3>0.5,1,0))
rocCurve3 <- pROC::roc(response=iTest$Indicted,
predictor=iTest$prediction3,
levels=levels(iTest$Indicted))
auc <- pROC::auc(rocCurve3)
#vif(indmodel3) %>% View()
mod3rocData <- data.frame(Sens=rocCurve3$sensitivities,Spec=rocCurve3$specificities)
#What is the optimal cutoff?
Thresh <- coords(rocCurve3,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(iTest$predclass3,iTest$Indicted,positive="1")
options(scipen = 1)
Thresh
summary(indmodel3)
confuse
options(scipen=1)
tidyindmodel3 <- tidy(indmodel3) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls + Priors`=estimate,
`All Controls + Priors p.value`=p.value)
tidyindmodel3 %>% DT::datatable()
glanceindmodel3 <- glance(indmodel3) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls + Priors`=value)
glanceindmodel3
ggplot(mod3rocData,aes(x=1-Spec,y=Sens))+
geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+
ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))
# Chunk 16
options(scipen=1)
tidyindmodels <- tidyindmodel3 %>%
left_join(.,tidyindmodel2,by="term") %>%
left_join(.,tidyindmodel1,by="term") %>%
left_join(.,var_names, by = c("term","term")) %>%
dplyr::select(Variable,`Race Only`,`Race Only p.value`,
`All Controls`,`All Controls p.value`,
`All Controls + Priors`,`All Controls + Priors p.value`) %>%
replace_na(list(`Race Only`="", `Race Only p.value` = "",
`All Controls`="", `All Controls p.value`="")) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Models") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F) %>%
kableExtra::group_rows("Demographics", 2, 8) %>%
kableExtra::group_rows("Instant Offense", 9, 22) %>%
kableExtra::group_rows("Criminal History", 23, 41) %>%
kableExtra::group_rows("Other factors", 42, 49)
glanceindmodels <- glanceindmodel1 %>%
select(`Race Only`) %>%
qpcR:::cbind.na(glanceindmodel2) %>%
select(`Race Only`,`All Controls`) %>%
qpcR:::cbind.na(glanceindmodel3) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`,`All Controls + Priors`) %>%
filter(!is.na(Variable)) %>%
kable(., format = "html", booktabs = T
, caption = "Indictment Classification Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Indictment Table.png")
tidyindmodels
tidyindmodels %>%
save_kable(., file = file_path)
file_path <- here::here("Output", "Indictment Performance.png")
glanceindmodels
glanceindmodels %>%
save_kable(., file = file_path)
# Chunk 17
#head(i,1)
Desc(pTrain$PleaBargain)
pform1 <- as.formula(PleaBargain ~ Race)
pmodel1 <- glm(formula = pform1,data=pTrain,family="binomial")
pTest$prediction<- predict(pmodel1,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass <- factor(ifelse(pTest$prediction>0.5,1,0))
#calculate ROC/AUC
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod1rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(pTest$predclass,pTest$PleaBargain,positive="1")
options(scipen = 1)
Thresh
summary(pmodel1)
confuse
tidypmodel1 <- tidy(pmodel1) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`Race Only`=estimate,
`Race Only p.value`=p.value)
tidypmodel1 %>% DT::datatable()
#aic <- MASS::stepAIC(pmodel1,direction="both")
#aic
#summary(aic)
glancepmodel1 <- glance(pmodel1) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`Race Only`=value)
glancepmodel1
ggplot(mod1rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 18
pform2 <- as.formula(PleaBargain ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed","BailRequest","DspCat","TopReduced",
"Custody","Indicted","Sentenced","SentenceType","BWO2", "ArcYear",
"DSPCondensed","TopReduced","DspCat","Sentenced","SentenceType","CatChargeFel","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(pTrain))
pmodel2 <- glm(formula = pform2,data=pTrain[!nms],family="binomial")
pTest$prediction2<- predict(pmodel2,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass2 <- factor(ifelse(pTest$prediction2>0.5,1,0))
#calculate ROC/AUC
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction2,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod2rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse2 <- confusionMatrix(pTest$predclass2
,pTest$PleaBargain
,positive="1")
options(scipen = 1)
Thresh
summary(pmodel2)
confuse2
#vif(pmodel2) %>% View()
tidypmodel2 <- tidy(pmodel2) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls`=estimate,
`All Controls p.value`=p.value)
tidypmodel2 %>% DT::datatable()
glancepmodel2 <- glance(pmodel2) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls`=value)
glancepmodel2
ggplot(mod2rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 19
pform3 <- as.formula(PleaBargain ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed","DspCat","TopReduced",
"Indicted","Sentenced","SentenceType","BWO2", "ArcYear","BailRequestRaw",
"DSPCondensed","TopReduced","DspCat","Sentenced","SentenceType","CatChargeFel","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(pTrain))
pmodel3 <- glm(formula = pform3,data=pTrain[!nms],family="binomial")
pTest$prediction3<- predict(pmodel3,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass3 <- factor(ifelse(pTest$prediction3>0.5,1,0))
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction3,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod3rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
confuse3 <- confusionMatrix(pTest$predclass3
,pTest$PleaBargain
,positive="1")
options(scipen = 1)
Thresh
summary(pmodel3)
confuse3
tidypmodel3 <- tidy(pmodel3) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls + Priors`=estimate,
`All Controls + Priors p.value`=p.value)
tidypmodel3 %>% DT::datatable()
glancepmodel3 <- glance(pmodel3) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls + Priors`=value)
glancepmodel3
ggplot(mod3rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
#
options(scipen=1000)
tidypmodels <- tidypmodel3 %>%
left_join(.,tidypmodel2,by="term") %>%
left_join(.,tidypmodel1,by="term") %>%
left_join(.,var_names, by = c("term","term")) %>%
dplyr::select(Variable,`Race Only`,`Race Only p.value`,
`All Controls`,`All Controls p.value`,
`All Controls + Priors`,`All Controls + Priors p.value`) %>%
replace_na(list(`Race Only`="", `Race Only p.value` = "",
`All Controls`="", `All Controls p.value`="")) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Models") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F) %>%
kableExtra::group_rows("Demographics", 2, 8) %>%
kableExtra::group_rows("Instant Offense", 9, 25) %>%
kableExtra::group_rows("Criminal History", 26, 44) %>%
kableExtra::group_rows("Other factors", 45, 53)
glancepmodels <- glancepmodel1 %>%
select(`Race Only`) %>%
qpcR:::cbind.na(glancepmodel2) %>%
select(`Race Only`,`All Controls`) %>%
qpcR:::cbind.na(glancepmodel3) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`,`All Controls + Priors`) %>%
filter(!is.na(Variable)) %>%
kable(., format = "html", booktabs = T
, caption = "Indictment Classification Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Plea Table.png")
tidypmodels
tidypmodels %>%
save_kable(., file = file_path)
file_path <- here::here("Output", "Plea Performance.png")
glancepmodels
glancepmodels %>%
save_kable(., file = file_path)
d <- read_feather(infile)
knitr::opts_chunk$set(eval = F, echo = F,warning=F,message=F,cache=F,fig.width=12,fig.height=8)
knitr::knit_hooks$set(inline = function(x) { prettyNum(x, big.mark=",") })
set.seed(813)
pkgs <- c("tidyverse", "here", "DescTools", "skimr",
"lubridate", "sjmisc", "tictoc", "purrr",
"xtable", "ggalt", "knitr", "kableExtra", "janitor",
"scales", "Cairo", "dplyr", "feather")
options(scipen=1000)
#Report: https://www.cookcountystatesattorney.org/sites/default/files/files/documents/ccsao_2017_data_report_180220.pdf
lapply(pkgs, require, character.only = T)
tic()
options(scipen = 1000,stringsAsFactors = FALSE)
#================
#Import and Clean
#================
infile <- here::here("data", "dataset.feather")
d <- read_feather(infile)
glimpse(d)
Desc(d$Offense_Category)
glimpse(d)
pkgs <- c("tidyverse", "here", "DescTools", "skimr",
"lubridate", "sjmisc", "tictoc", "feather")
options(scipen=1000)
#Report: https://www.cookcountystatesattorney.org/sites/default/files/files/documents/ccsao_2017_data_report_180220.pdf
lapply(pkgs, require, character.only = T)
tic()
##Intake - all people arrested
int <- here::here("data", "intake.csv")
int <- read.csv(int)
##Initiation - all people charged
init <- here::here("data", "initiation.csv")
i <- read.csv(init)
dir <- here::here("data", "clean")
list.files()
list.files(dir)
files <- list.files(dir)
print(i)
files <- list.files(dir)
for (i in files){
print(i)
}
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
print(i)
assign(i, read_feather(i))
}
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
print(f)
print(i)
#assign(i, read_feather(i))
}
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
print(f)
print(i)
assign(i, read_feather(f))
}
?gsub
#assign(i, read_feather(f))
}
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", f)
print(nm)
?gsub
print(f)
print(i)
#assign(i, read_feather(f))
}
nm <- gsub(".feather", "", i)
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
#assign(i, read_feather(f))
}
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
library(feather)
tic()
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
df <- int2 %>%
left_join(i2, by = "CASE_PARTICIPANT_ID") %>%
left_join(d3, by = "CASE_PARTICIPANT_ID") %>%
left_join(gbp2, by = "CASE_PARTICIPANT_ID") %>%
left_join(s2, by = "CASE_PARTICIPANT_ID")
df2 <- df %>%
#head() %>%
to_dummy(EVENT, disp, race2, suffix = "label") %>%
bind_cols(df) %>%
replace_na(`EVENT_Indictment`:CASE_PARTICIPANT_ID, disposed.x, gbp.x,
value = 0)
outfile <- here::here("data", "dataset.feather")
write_feather(df2, outfile)
qplot(df2$event_year)
toc()
library(feather)
tic()
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
df <- intake %>%
left_join(initiation, by = "CASE_PARTICIPANT_ID") %>%
left_join(dispositions, by = "CASE_PARTICIPANT_ID") %>%
left_join(gbp, by = "CASE_PARTICIPANT_ID") %>%
left_join(sentences, by = "CASE_PARTICIPANT_ID")
df2 <- df %>%
#head() %>%
to_dummy(EVENT, disp, race2, suffix = "label") %>%
bind_cols(df) %>%
replace_na(`EVENT_Indictment`:CASE_PARTICIPANT_ID, disposed.x, gbp.x,
value = 0)
outfile <- here::here("data", "dataset.feather")
write_feather(df2, outfile)
qplot(df2$event_year)
toc()
library(feather)
tic()
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
df <- intake %>%
left_join(initiation, by = "CASE_PARTICIPANT_ID") %>%
left_join(dispositions, by = "CASE_PARTICIPANT_ID") %>%
left_join(gbp, by = "CASE_PARTICIPANT_ID") %>%
left_join(sentences, by = "CASE_PARTICIPANT_ID")
df2 <- df %>%
#head() %>%
to_dummy(EVENT, disp, race2, suffix = "label") %>%
bind_cols(df) %>%
replace_na(`EVENT_Indictment`:CASE_PARTICIPANT_ID, disposed.x, gbp.x,
value = 0)
glimpse(df2)
outfile <- here::here("data", "dataset.feather")
write_feather(df2, outfile)
qplot(df2$event_year)
toc()
library(feather)
tic()
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
df <- intake %>%
left_join(initiation, by = "CASE_PARTICIPANT_ID") %>%
left_join(dispositions, by = "CASE_PARTICIPANT_ID") %>%
left_join(gbp, by = "CASE_PARTICIPANT_ID") %>%
left_join(sentences, by = "CASE_PARTICIPANT_ID")
df2 <- df %>%
#head() %>%
to_dummy(EVENT, disp, race2, suffix = "label") %>%
bind_cols(df) %>%
replace_na(`EVENT_Indictment`:CASE_PARTICIPANT_ID, disposed.x, gbp.x,
value = 0) %>%
dplyr::select(-OFFENSE_TITLE.y, -PRIMARY_CHARGE.y, -dispose.y, -gbp.y,
-CHARGE_DISPOSITION.y, -CHARGE_DISPOSITION_REASON.y,
-JUDGE.y, -CLASS.y, -class_order.y)
glimpse(df2)
outfile <- here::here("data", "dataset.feather")
write_feather(df2, outfile)
qplot(df2$event_year)
toc()
library(feather)
tic()
dir <- here::here("data", "clean")
files <- list.files(dir)
for (i in files){
f <- here::here("data", "clean", i)
nm <- gsub(".feather", "", i)
print(nm)
?gsub
print(f)
print(i)
assign(nm, read_feather(f))
}
df <- intake %>%
left_join(initiation, by = "CASE_PARTICIPANT_ID") %>%
left_join(dispositions, by = "CASE_PARTICIPANT_ID") %>%
left_join(gbp, by = "CASE_PARTICIPANT_ID") %>%
left_join(sentences, by = "CASE_PARTICIPANT_ID")
df2 <- df %>%
#head() %>%
to_dummy(EVENT, disp, race2, suffix = "label") %>%
bind_cols(df) %>%
replace_na(`EVENT_Indictment`:CASE_PARTICIPANT_ID, disposed.x, gbp.x,
value = 0) %>%
dplyr::select(-OFFENSE_TITLE.y, -PRIMARY_CHARGE.y, -disposed.y, -gbp.y,
-CHARGE_DISPOSITION.y, -CHARGE_DISPOSITION_REASON.y,
-JUDGE.y, -CLASS.y, -class_order.y)
glimpse(df2)
outfile <- here::here("data", "dataset.feather")
write_feather(df2, outfile)
qplot(df2$event_year)
toc()
glimpse(df2)
shiny::runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
runApp('Output/Dashboard')
file <- here::here("data", "dataset.feather")
df <- read_feather(file)
file <- here::here("data", "dataset.feather")
df <- read_feather(file)
runApp('Output/Dashboard')
DescTools::Desc(df$EVENT)
runApp('Output/Dashboard')
runApp('Output/Dashboard')
