select(`Race Only`) %>%
qpcR:::cbind.na(glancemodel2) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`) %>%
filter(!is.na(Variable)) %>%
mutate_if(is.numeric,funs(round(.,2))) %>%
kable(., format = "html", booktabs = T
, caption = "Bail Request Regression Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Bail Performance.png")
glancebrmodels
glancebrmodels %>%
save_kable(., file = file_path)
# Chunk 8
#head(cTrain,1)
#head(cTrain[,c(-1,-3)][1,])
Desc(cTrain$Custody)
arcform1 <- as.formula(Custody ~ Race)
arcmodel1 <- glm(formula = arcform1,data=cTrain,family="binomial")
cTest$prediction<- predict(arcmodel1,newdata=cTest,type="response",na.action=na.pass)
cTest$predclass <- factor(ifelse(cTest$prediction>0.5,1,0))
#calculate ROC/AUC
rocCurve <- pROC::roc(response=cTest$Custody,
predictor=cTest$prediction,
levels=levels(cTest$Custody))
auc <- pROC::auc(rocCurve)
mod1rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
#What is the optimal cutoff?
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(cTest$predclass,cTest$Custody,positive="1")
options(scipen = 1)
#Thresh
summary(arcmodel1)
confuse
tidyarcmodel1 <- tidy(arcmodel1) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value, 3)) %>%
rename(`Race Only`=estimate,
`Race Only p.value`=p.value) %>%
dplyr::select(term,`Race Only`,`Race Only p.value`)
#tidyarcmodel1
glancearcmodel1 <- glance(arcmodel1) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`Race Only`=value)
#glancearcmodel1
ggplot(mod1rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 9
#head(cTrain[,c(-1,-3)][1,])
#Desc(c$Custody)
arcform2 <- as.formula(Custody ~ .)
vars <- c("defendantid","BailRequested","Indicted","TopReduced","PreMadeBailRequest",
"DspCat","Sentenced","SentenceType","PleaBargain","BailRequest","DSPCondensed",
"DSPCondensed","PleaBargain","TopReduced","DspCat","Sentenced","SentenceType",
"CatChargeInd","BailRequestRaw","ArcYear", "BWO2","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(cTrain))
arcmodel2 <- glm(formula = arcform2,data=cTrain[!nms],family="binomial")
cTest$prediction2<- predict(arcmodel2,newdata=cTest,type="response",na.action=na.pass)
cTest$predclass2 <- factor(ifelse(cTest$prediction2>0.5,1,0))
#v <- vif(arcmodel2)
#View(v)
#calculate ROC/AUC
rocCurve2 <- pROC::roc(response=cTest$Custody,
predictor=cTest$prediction2,
levels=levels(cTest$Custody))
#
# cTest %>%
#   mutate(br2=cut(BailRequest,breaks = 100)) %>%
# ggplot(aes(x=br2,y=prediction2))+geom_jitter(alpha=.8,aes(color=Custody))+geom_smooth()
auc <- pROC::auc(rocCurve2)
mod2rocData <- data.frame(Sens=rocCurve2$sensitivities,Spec=rocCurve2$specificities)
#What is the optimal cutoff?
Thresh <- coords(rocCurve2,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(cTest$predclass2,cTest$Custody,positive="1")
options(scipen = 1)
#Thresh
summary(arcmodel2)
confuse
tidyarcmodel2 <- tidy(arcmodel2) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value, 3)) %>%
rename(`All Controls`=estimate,
`All Controls p.value`=p.value) %>%
dplyr::select(term,`All Controls`,`All Controls p.value`)
tidyarcmodel2 %>% DT::datatable()
glancearcmodel2 <- glance(arcmodel2) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls`=value)
#glancearcmodel2
ggplot(mod2rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("Pretrial Detention, All Controls AUC: ",round(auc,5)))
# Chunk 10
#head(cTrain[,c(-1)][1,])
#Desc(c$Custody)
arcform3 <- as.formula(Custody ~  . ) #+ log(BailRequest) - BailRequest
vars <- c("defendantid","BailRequested","Indicted","TopReduced",
"DspCat","Sentenced","SentenceType","PleaBargain","DSPCondensed",
"DSPCondensed","PleaBargain","TopReduced","DspCat","Sentenced","SentenceType",
"CatChargeInd","BailRequestRaw","ArcYear", "BWO2","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(cTrain))
arcmodel3 <- glm(formula = arcform3,data=cTrain[!nms],family="binomial")
cTest$prediction3<- predict(arcmodel3,newdata=cTest,type="response",na.action=na.pass)
cTest$predclass3 <- factor(ifelse(cTest$prediction3>0.5,1,0))
rocCurve3 <- pROC::roc(response=cTest$Custody,
predictor=cTest$prediction3,
levels=levels(cTest$Custody))
auc <- pROC::auc(rocCurve3)
mod3rocData <- data.frame(Sens=rocCurve3$sensitivities,Spec=rocCurve3$specificities)
#What is the optimal cutoff?
Thresh <- coords(rocCurve3,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(cTest$predclass3,cTest$Custody,positive="1")
options(scipen = 1)
#Thresh
summary(arcmodel3)
confuse
tidyarcmodel3 <- tidy(arcmodel3) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value, 3)) %>%
rename(`All Controls + Priors`=estimate,
`All Controls + Priors p.value`=p.value) %>%
dplyr::select(term,`All Controls + Priors`,`All Controls + Priors p.value`)
tidyarcmodel3 %>% DT::datatable()
#tidyarcmodel3
glancearcmodel3 <- glance(arcmodel3) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls + Priors`=value)
#glancearcmodel3
#
# cTest %>%
#   ggplot(aes(BailRequest,prediction3))+geom_jitter(alpha=.3)+geom_smooth()
ggplot(mod3rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("Pretrial Detention: All Controls + Priors AUC: ",round(auc,5)))
# Chunk 11
options(scipen=1)
tidyarcmodels <- tidyarcmodel3 %>%
left_join(.,tidyarcmodel2,by="term") %>%
left_join(.,tidyarcmodel1,by="term") %>%
left_join(.,var_names, by = c("term","term")) %>%
dplyr::select(Variable,`Race Only`,`Race Only p.value`,
`All Controls`,`All Controls p.value`,
`All Controls + Priors`,`All Controls + Priors p.value`) %>%
replace_na(list(`Race Only`="", `Race Only p.value` = "",
`All Controls`="", `All Controls p.value`="")) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Models") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F) %>%
kableExtra::group_rows("Demographics", 2, 8) %>%
kableExtra::group_rows("Instant Offense", 9, 22) %>%
kableExtra::group_rows("Criminal History", 23, 41) %>%
kableExtra::group_rows("Other factors", 42, 49)
glancearcmodels <- glancearcmodel1 %>%
select(`Race Only`) %>%
qpcR:::cbind.na(glancearcmodel2) %>%
select(`Race Only`,`All Controls`) %>%
qpcR:::cbind.na(glancearcmodel3) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`,
`All Controls + Priors`) %>%
filter(!is.na(Variable)) %>%
select(Variable,`Race Only`,`All Controls`,`All Controls + Priors`) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Detention Table.png")
tidyarcmodels
tidyarcmodels %>%
save_kable(., file = file_path)
file_path <- here::here("Output", "Detention Performance.png")
glancearcmodels
glancearcmodels %>%
save_kable(., file = file_path)
# Chunk 12
glancearcmodels %>%
rename(metric=variable) %>%
reshape2::melt() %>%
ggplot(aes(variable,value,group=metric))+geom_line()+
facet_wrap(~metric,scales="free") -> p1
#tidy(arcmodel3)
p1
#tidyarcmodels
# tidyarcmodels %>%
#   filter(str_detect(term,"Race"))
# Chunk 13
Desc(iTrain$Indicted)
options(scipen=1000)
Desc(iTrain$PreMadeBailRequest~iTrain$Gang)
indform1 <- as.formula(Indicted ~ Race)
indmodel1 <- glm(formula = indform1,data=iTrain[,c(-1)],family="binomial")
iTest$prediction<- predict(indmodel1,newdata=iTest,type="response",na.action=na.pass)
iTest$predclass <- factor(ifelse(iTest$prediction>0.5,1,0))
rocCurve <- pROC::roc(response=iTest$Indicted,
predictor=iTest$prediction,
levels=levels(iTest$Indicted))
auc <- pROC::auc(rocCurve)
mod1rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
confuse <- confusionMatrix(iTest$predclass,iTest$Indicted,positive="1")
options(scipen = 1)
Thresh
summary(indmodel1)
confuse
tidyindmodel1 <- tidy(indmodel1) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`Race Only`=estimate,
`Race Only p.value`= p.value)
tidyindmodel1
glanceindmodel1 <- glance(indmodel1) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`Race Only`=value)
glanceindmodel1
ggplot(mod1rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 14
indform2 <- as.formula(Indicted ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed","BailRequest","DspCat",
"TopReduced","Custody","Sentenced","SentenceType",
"DSPCondensed","PleaBargain","TopReduced","DspCat",
"Sentenced","SentenceType","CatChargeInd","BailRequestRaw",
"BWO2", "ArcYear","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(iTrain))
indmodel2 <- glm(formula = indform2,data=iTrain[!nms],family="binomial")
iTest$prediction2<- predict(indmodel2,newdata=iTest,type="response",na.action=na.pass)
iTest$predclass2 <- factor(ifelse(iTest$prediction2>0.5,1,0))
rocCurve2 <- pROC::roc(response=iTest$Indicted,
predictor=iTest$prediction2,
levels=levels(iTest$Indicted))
auc <- pROC::auc(rocCurve2)
mod2rocData <- data.frame(Sens=rocCurve2$sensitivities,Spec=rocCurve2$specificities)
Thresh <- coords(rocCurve2,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
confuse <- confusionMatrix(iTest$predclass2,iTest$Indicted,positive="1")
options(scipen = 1)
Thresh
summary(indmodel2)
confuse
tidyindmodel2 <- tidy(indmodel2) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls`=estimate,
`All Controls p.value`=p.value)
tidyindmodel2 %>% DT::datatable()
glanceindmodel2 <- glance(indmodel2) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls`=value)
glanceindmodel2
ggplot(mod2rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))
# Chunk 15
indform3 <- as.formula(Indicted ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed",
"DspCat","TopReduced","Sentenced","SentenceType",
"PleaBargain","CatChargeInd","BailRequestRaw", "BWO2", "ArcYear","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(iTrain))
indmodel3 <- glm(formula = indform3,data=iTrain[!nms],family="binomial")
iTest$prediction3<- predict(indmodel3,newdata=iTest,type="response",na.action=na.pass)
iTest$predclass3 <- factor(ifelse(iTest$prediction3>0.5,1,0))
rocCurve3 <- pROC::roc(response=iTest$Indicted,
predictor=iTest$prediction3,
levels=levels(iTest$Indicted))
auc <- pROC::auc(rocCurve3)
#vif(indmodel3) %>% View()
mod3rocData <- data.frame(Sens=rocCurve3$sensitivities,Spec=rocCurve3$specificities)
#What is the optimal cutoff?
Thresh <- coords(rocCurve3,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(iTest$predclass3,iTest$Indicted,positive="1")
options(scipen = 1)
Thresh
summary(indmodel3)
confuse
options(scipen=1)
tidyindmodel3 <- tidy(indmodel3) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls + Priors`=estimate,
`All Controls + Priors p.value`=p.value)
tidyindmodel3 %>% DT::datatable()
glanceindmodel3 <- glance(indmodel3) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls + Priors`=value)
glanceindmodel3
ggplot(mod3rocData,aes(x=1-Spec,y=Sens))+
geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+
ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))
# Chunk 16
options(scipen=1)
tidyindmodels <- tidyindmodel3 %>%
left_join(.,tidyindmodel2,by="term") %>%
left_join(.,tidyindmodel1,by="term") %>%
left_join(.,var_names, by = c("term","term")) %>%
dplyr::select(Variable,`Race Only`,`Race Only p.value`,
`All Controls`,`All Controls p.value`,
`All Controls + Priors`,`All Controls + Priors p.value`) %>%
replace_na(list(`Race Only`="", `Race Only p.value` = "",
`All Controls`="", `All Controls p.value`="")) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Models") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F) %>%
kableExtra::group_rows("Demographics", 2, 8) %>%
kableExtra::group_rows("Instant Offense", 9, 22) %>%
kableExtra::group_rows("Criminal History", 23, 41) %>%
kableExtra::group_rows("Other factors", 42, 49)
glanceindmodels <- glanceindmodel1 %>%
select(`Race Only`) %>%
qpcR:::cbind.na(glanceindmodel2) %>%
select(`Race Only`,`All Controls`) %>%
qpcR:::cbind.na(glanceindmodel3) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`,`All Controls + Priors`) %>%
filter(!is.na(Variable)) %>%
kable(., format = "html", booktabs = T
, caption = "Indictment Classification Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Indictment Table.png")
tidyindmodels
tidyindmodels %>%
save_kable(., file = file_path)
file_path <- here::here("Output", "Indictment Performance.png")
glanceindmodels
glanceindmodels %>%
save_kable(., file = file_path)
# Chunk 17
#head(i,1)
Desc(pTrain$PleaBargain)
pform1 <- as.formula(PleaBargain ~ Race)
pmodel1 <- glm(formula = pform1,data=pTrain,family="binomial")
pTest$prediction<- predict(pmodel1,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass <- factor(ifelse(pTest$prediction>0.5,1,0))
#calculate ROC/AUC
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod1rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse <- confusionMatrix(pTest$predclass,pTest$PleaBargain,positive="1")
options(scipen = 1)
Thresh
summary(pmodel1)
confuse
tidypmodel1 <- tidy(pmodel1) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`Race Only`=estimate,
`Race Only p.value`=p.value)
tidypmodel1 %>% DT::datatable()
#aic <- MASS::stepAIC(pmodel1,direction="both")
#aic
#summary(aic)
glancepmodel1 <- glance(pmodel1) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`Race Only`=value)
glancepmodel1
ggplot(mod1rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 18
pform2 <- as.formula(PleaBargain ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed","BailRequest","DspCat","TopReduced",
"Custody","Indicted","Sentenced","SentenceType","BWO2", "ArcYear",
"DSPCondensed","TopReduced","DspCat","Sentenced","SentenceType","CatChargeFel","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(pTrain))
pmodel2 <- glm(formula = pform2,data=pTrain[!nms],family="binomial")
pTest$prediction2<- predict(pmodel2,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass2 <- factor(ifelse(pTest$prediction2>0.5,1,0))
#calculate ROC/AUC
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction2,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod2rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
#Confusion Matrix
confuse2 <- confusionMatrix(pTest$predclass2
,pTest$PleaBargain
,positive="1")
options(scipen = 1)
Thresh
summary(pmodel2)
confuse2
#vif(pmodel2) %>% View()
tidypmodel2 <- tidy(pmodel2) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls`=estimate,
`All Controls p.value`=p.value)
tidypmodel2 %>% DT::datatable()
glancepmodel2 <- glance(pmodel2) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls`=value)
glancepmodel2
ggplot(mod2rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
# Chunk 19
pform3 <- as.formula(PleaBargain ~ .)
vars <- c("defendantid","BailRequested","DSPCondensed","DspCat","TopReduced",
"Indicted","Sentenced","SentenceType","BWO2", "ArcYear","BailRequestRaw",
"DSPCondensed","TopReduced","DspCat","Sentenced","SentenceType","CatChargeFel","PreMadeBailRequest")
nms <- grepl(paste(vars,collapse="|"),names(pTrain))
pmodel3 <- glm(formula = pform3,data=pTrain[!nms],family="binomial")
pTest$prediction3<- predict(pmodel3,newdata=pTest,type="response",na.action=na.pass)
pTest$predclass3 <- factor(ifelse(pTest$prediction3>0.5,1,0))
rocCurve <- pROC::roc(response=pTest$PleaBargain,
predictor=pTest$prediction3,
levels=levels(pTest$PleaBargain))
auc <- pROC::auc(rocCurve)
mod3rocData <- data.frame(Sens=rocCurve$sensitivities,Spec=rocCurve$specificities)
Thresh <- coords(rocCurve,x="best",best.method="closest.topleft")
cutoff <- Thresh["threshold"]
confuse3 <- confusionMatrix(pTest$predclass3
,pTest$PleaBargain
,positive="1")
options(scipen = 1)
Thresh
summary(pmodel3)
confuse3
tidypmodel3 <- tidy(pmodel3) %>%
mutate(estimate=round(exp(estimate),2),
p.value = round(p.value,3)) %>%
rename(`All Controls + Priors`=estimate,
`All Controls + Priors p.value`=p.value)
tidypmodel3 %>% DT::datatable()
glancepmodel3 <- glance(pmodel3) %>%
reshape2::melt() %>%
mutate(value=round(value,4)) %>%
rename(`All Controls + Priors`=value)
glancepmodel3
ggplot(mod3rocData,aes(x=1-Spec,y=Sens))+geom_line(color="red")+
xlab("False Positive Rate/1-Specificity")+ylab("True Positive Rate/Sensitivity")+
labs(title=paste("AUC: ",round(auc,5)))+
geom_point(aes(x=1-Thresh["specificity"],
y=Thresh["sensitivity"]),color="blue",size=4)
#
options(scipen=1000)
tidypmodels <- tidypmodel3 %>%
left_join(.,tidypmodel2,by="term") %>%
left_join(.,tidypmodel1,by="term") %>%
left_join(.,var_names, by = c("term","term")) %>%
dplyr::select(Variable,`Race Only`,`Race Only p.value`,
`All Controls`,`All Controls p.value`,
`All Controls + Priors`,`All Controls + Priors p.value`) %>%
replace_na(list(`Race Only`="", `Race Only p.value` = "",
`All Controls`="", `All Controls p.value`="")) %>%
kable(., format = "html", booktabs = T
, caption = "Pretrial Detention Classification Models") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F) %>%
kableExtra::group_rows("Demographics", 2, 8) %>%
kableExtra::group_rows("Instant Offense", 9, 25) %>%
kableExtra::group_rows("Criminal History", 26, 44) %>%
kableExtra::group_rows("Other factors", 45, 53)
glancepmodels <- glancepmodel1 %>%
select(`Race Only`) %>%
qpcR:::cbind.na(glancepmodel2) %>%
select(`Race Only`,`All Controls`) %>%
qpcR:::cbind.na(glancepmodel3) %>%
left_join(.,var_names, by = c("variable" = "term")) %>%
select(Variable,`Race Only`,`All Controls`,`All Controls + Priors`) %>%
filter(!is.na(Variable)) %>%
kable(., format = "html", booktabs = T
, caption = "Indictment Classification Model Performance") %>%
kable_styling(bootstrap_options = c("striped", "hold_position"),
full_width = F)
file_path <- here::here("Output", "Plea Table.png")
tidypmodels
tidypmodels %>%
save_kable(., file = file_path)
file_path <- here::here("Output", "Plea Performance.png")
glancepmodels
glancepmodels %>%
save_kable(., file = file_path)
